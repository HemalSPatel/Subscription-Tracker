name: Format Code

on:
  push:
    branches:
      - main # Runs only when pushing to main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    # permissions:
    # contents: write
    # pull-requests: write # Required to create PRs

    # steps:
    # - name: Checkout code
    # uses: actions/checkout@v3
#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '18'

#       - name: Install Dependencies
#         run: npm ci  # Clean install

#       - name: Configure Git for GitHub Actions bot
#         run: |
#           git config --local user.name "github-actions[bot]"
#           git config --local user.email "github-actions[bot]@users.noreply.github.com"  # GitHub Actions bot's email

#       - name: Fetch all branches
#         run: git fetch --all

#       - name: Generate timestamp
#         id: vars
#         run: echo "BRANCH_SUFFIX=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV

#       - name: Create and switch to a new branch
#         run: git checkout -b auto/code-formatting-${{ env.BRANCH_SUFFIX }}

#       - name: Run Prettier Formatting
#         run: npx prettier --write "**/*.{js,json,html,ts}"

#       - name: Check for changes
#         id: check_changes
#         run: |
#           if git diff --quiet; then
#             echo "No changes to commit."
#             echo "SKIP_PR=true" >> $GITHUB_ENV
#           else
#             echo "Changes detected."
#           fi

#       - name: Stage changes
#         if: env.SKIP_PR != 'true'
#         run: |
#           git add .
#           git reset package-lock.json  # Ignore package-lock.json changes

#       - name: Commit changes
#         if: env.SKIP_PR != 'true'
#         run: git commit -m "Apply Prettier formatting" || echo "No changes to commit"

#       - name: Install GitHub CLI
#         if: env.SKIP_PR != 'true'
#         run: sudo apt-get install -y gh

#       - name: Authenticate GitHub CLI
#         if: env.SKIP_PR != 'true'
#         run: echo "${{ secrets.GH_PAT }}" | gh auth login --with-token

#       - name: Push branch
#         if: env.SKIP_PR != 'true'
#         run: git push origin auto/code-formatting-${{ env.BRANCH_SUFFIX }}

#       - name: Create PR using GitHub Actions bot
#         if: env.SKIP_PR != 'true'
#         env:
#           GH_TOKEN: ${{ secrets.GH_PAT }}  # Use PAT instead of default token
#         run: |
#           gh pr create --base main --head auto/code-formatting-${{ env.BRANCH_SUFFIX }} \
#             --title "Apply formatting to main branch" \
#             --body "This PR was automatically created by GitHub Actions bot to format the code using Prettier."
